<UserControl x:Class="App.MarkupProject.Views.MarkupWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:App.MarkupProject.Views"
             xmlns:cv="clr-namespace:App.MarkupProject.Converters"
             xmlns:models="clr-namespace:App.MarkupProject.Models"
             xmlns:viewmodels="clr-namespace:App.MarkupProject.ViewModels"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:PolygonsMarkingEditor.Behaviors"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewmodels:MarkupWindowViewModel}"
             d:Background="CornflowerBlue"
             d:DesignHeight="720" d:DesignWidth="1280">
    <UserControl.Resources>
        <ResourceDictionary/>
    </UserControl.Resources>
    <Grid HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2.5*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        
        <!-- Левая часть: поле загрузки изображений -->
        <Grid Grid.Column="0" VerticalAlignment="Top" Margin="5,5,5,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="Загрузить изображение:" Style="{StaticResource TitleTextBlockStyle}"/>
            <ListBox Grid.Row="1" 
                     VerticalAlignment="Stretch"
                     VerticalContentAlignment="Stretch"
                     MinHeight="689"
                     HorizontalAlignment="Stretch" Margin="0,0,0,5"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     ItemsSource="{Binding Project.Images}" 
                     DisplayMemberPath="Name"
                     SelectedItem="{Binding SelectedImage}"
                     Background="#CCE5FF"/>
        </Grid>

        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1">
            <!-- Центральная часть: поле редактирования изображения -->
            <Border Grid.Column="1" Grid.ColumnSpan="1" BorderBrush="Black" BorderThickness="1" Margin="5,5,5,5">
                <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="5,5,5,5">

                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="PreviewMouseWheel">
                            <b:InvokeCommandAction Command="{Binding MouseWheelCommand}" PassEventArgsToCommand="True" />
                        </b:EventTrigger>
                        <b:EventTrigger EventName="KeyDown">
                            <b:InvokeCommandAction Command="{Binding CanvasKeyStrokeCommand}" PassEventArgsToCommand="True"></b:InvokeCommandAction>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>

                    <ItemsControl HorizontalAlignment="Center" VerticalAlignment="Center" ItemsSource="{Binding SelectedImage.Markup}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate >
                                <Canvas x:Name="Canvas" Width="{Binding SelectedImage.Resolution.Item1}" Height="{Binding SelectedImage.Resolution.Item2}" LayoutTransform="{Binding Scale}">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseLeftButtonDown">
                                            <b:InvokeCommandAction Command="{Binding MouseLeftButtonDownCommand}" PassEventArgsToCommand="True"></b:InvokeCommandAction>
                                        </b:EventTrigger>
                                        
                                    </b:Interaction.Triggers>

                                    <Canvas.Background>
                                        <ImageBrush ImageSource="{Binding SelectedImage.ImagePath}"></ImageBrush>
                                    </Canvas.Background>
                                </Canvas>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type models:Polygon}">
                                <Polygon Canvas.Top="0" Canvas.Left="0"
                                    Points="{Binding Converter={cv:FigureConverter}}"
                                    StrokeThickness="4" Stroke="{Binding Converter={cv:PolyColorConverter}}"
                                    Visibility="{Binding IsVisible, Converter={cv:PolysVisibilityConverter}}"
                                    Opacity="0.6">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseRightButtonDown">
                                            <b:InvokeCommandAction
                                                Command="{Binding DataContext.PolygonClickedCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                CommandParameter="{Binding}"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </Polygon>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Border>
        </Grid>

        <!-- Правая часть: кнопки "Инструменты" и кнопка "Назад" -->
        <StackPanel Grid.Column="2" VerticalAlignment="Top" Margin="5,5,5,0" HorizontalAlignment="Stretch">
            <TextBlock Text="Выбор класса:" Margin="5,0,0,5" Style="{StaticResource TitleTextBlockStyle}"/>
            <ComboBox ItemsSource="{Binding Project.ConfigLoader.ProjectConfigObj.MarkupClasses}"
                      SelectedItem="{Binding SelectedMarkupClass, Mode=TwoWay}"/>

            <TextBlock Text="Инструменты:"  Margin="5,0,0,5" Style="{StaticResource TitleTextBlockStyle}"/>
            <Button Content="Полигон" Margin="0,0,0,5" Command="{Binding PolygonToolCommand}" Style="{StaticResource ButtonStyle}"/>
            <Button Content="Прямоугольник" Margin="0,0,0,5" Command="{Binding RectangleToolCommand}" Style="{StaticResource ButtonStyle}"/>

            <!-- <Button Content="Перемещение фигуры" Margin="0,0,0,5" Command="{Binding MoveFigureToolCommand}" Style="{StaticResource ButtonStyle}"/> -->
            <!-- <Button Content="Перемещение точек" Margin="0,0,0,5" Command="{Binding MovePointsToolCommand}" Style="{StaticResource ButtonStyle}"/> -->
            <!-- <Button Content="Удаление точек" Margin="0,0,0,5" Command="{Binding DeleteToolCommand}" Style="{StaticResource ButtonStyle}"/> -->
            <TextBlock Text="Выход:" Margin="0,0,0,5" Style="{StaticResource TitleTextBlockStyle}" />
            <Button Command="{Binding ExportProject}" Content="Сохранить проект" Margin="0,0,0,5" Style="{StaticResource ButtonStyle}"/>
            <Button Command="{Binding ToSettings}" Content="К настройкам" Margin="0,0,0,5" Style="{StaticResource ButtonStyle}"/>
            <Button Command="{Binding GoBackCommand}" Content="Закрыть проект" Margin="0,0,0,5" Style="{StaticResource ButtonStyle}"/>
        </StackPanel>

        <!-- Правая часть: поле для отображения текущей разметки -->
        <Grid Grid.Column="3" Grid.Row="0" VerticalAlignment="Top" Margin="5,5,5,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="Выделения:" Margin="0,0,0,5" Style="{StaticResource TitleTextBlockStyle}"/>
            <ListBox
                Grid.Row="1"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                VerticalAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                HorizontalAlignment="Stretch"
                SelectedItem="{Binding SelectedMarkupDisplay, Mode=TwoWay}"
                ItemsSource="{Binding SelectedImage.Markup}" Margin="0,0,0,5" MinHeight="689" d:ItemsSource="{d:SampleData ItemCount=5}"
                Background="#CCE5FF"
                >
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="KeyDown">
                        <b:InvokeCommandAction Command="{Binding SelectionKeyboardCommand}" PassEventArgsToCommand="True"></b:InvokeCommandAction>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ComboBox Grid.Row="1" HorizontalAlignment="Stretch" ItemsSource="{Binding Labels}" SelectedItem="{Binding AssignedClassID, Mode=TwoWay}" Text="{Binding AssignedClass, Mode=TwoWay}" Margin="5,5,5,5"/>
                            <CheckBox Grid.Row="1" IsChecked="{Binding IsVisible, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="1" Margin="5,5,5,5"></CheckBox>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        
    </Grid>
</UserControl>
